[gd_scene load_steps=2 format=3 uid="uid://duvxbrmfmtv4h"]

[sub_resource type="GDScript" id="GDScript_wmcky"]
script/source = "extends Node3D

# Outline settings
@export var outline_color = Color(0.0, 0.0, 0.0, 1.0) # Outline color
@export var outline_thickness = 0.02 # Outline thickness (slightly reduced for better results)

# Internal outline mesh reference
@export var _mesh: MeshInstance3D
var outline_mesh: MeshInstance3D = null
var skeleton: Skeleton3D = null

func _ready():
	if not _mesh:
		_mesh = get_parent()  # This assumes the mesh is the parent node
	
	# Get the skeleton if available
	skeleton = _mesh.get_parent() if _mesh.get_parent() is Skeleton3D else null
	
	create_outline()

# Function to create an outline mesh automatically
func create_outline():
	if outline_mesh != null:
		outline_mesh.queue_free()  # Clean up any existing outline mesh

	# Create the outline as a new MeshInstance3D
	outline_mesh = MeshInstance3D.new()

	# Duplicate the mesh and apply the outline material
	outline_mesh.mesh = _mesh.mesh
	outline_mesh.material_override = create_outline_material()

	# Ensure the outline mesh doesn't cast shadows or interact with lighting
	outline_mesh.cast_shadow = GeometryInstance3D.SHADOW_CASTING_SETTING_OFF

	# Set the outline mesh's transformation to match the original mesh
	outline_mesh.transform = _mesh.transform

	# Add the outline as a child of the current node
	if skeleton:
		skeleton.add_child(outline_mesh)
	else:
		_mesh.add_child.call_deferred(outline_mesh)

# Function to create the outline material using a more refined shader
func create_outline_material() -> ShaderMaterial:
	var shader_material = ShaderMaterial.new()
	var shader_code = \"\"\"
	shader_type spatial;

	// Render only the backfaces for the outline
	render_mode cull_front, unshaded;

	uniform vec4 outline_color : source_color = vec4(0.0, 0.0, 0.0, 1.0); // Outline color
	uniform float outline_thickness = 0.02; // Outline thickness

	// Push vertices outward along their normals for the outline
	void vertex() {
		VERTEX += NORMAL * outline_thickness;
	}

	void fragment() {
		ALBEDO = outline_color.rgb;  // Set the outline color
	}
	\"\"\"
	shader_material.shader = Shader.new()
	shader_material.shader.code = shader_code
	shader_material.set_shader_parameter(\"outline_color\", outline_color)
	shader_material.set_shader_parameter(\"outline_thickness\", outline_thickness)
	return shader_material
"

[node name="OutlineEffect" type="Node3D"]
script = SubResource("GDScript_wmcky")
